[Make sure we have 4-5 Categories in our table]

Opened Index.cshtml under Admin/Views/Category

Now we have defined a model for this view. At the top added:

@model BulkyBook.Models.ViewModels.CategoryVM

Header header for Category List and Create Category link will not change.

Now added a div after br tag, and copied the div class from the earlier div that we commented so copied 
<div class="p-4 border rounded"> 
added this corrosponding closing div.

Inside the div first we have a check for if Categories count is greater than 0, then only we would display the table

    @if (Model.Categories.Count() > 0)
    { 
    
    }

In the else block we will display No Categories exists in a p tag.

    else
    { 
    <p>No Categories Exists</p>
    }

Now in the if block added a table with class table table-striped bord. Inside that added a tr with class table-secondary. next added two th blocks, first one had Category Name and the second one is empty.

        <table class="table table-striped border" >
            <tr class="table-secondary">
                <th>
                    Category Name
                </th>
                <th></th>
            </tr>
        </table>

Now after the tr ends, we will have a foreach loop iterating over Model.Categories.

Then we will have tr starting and ending tag inside the foreach loop. Inside that in the first td block, we will use Html.displayFor to display the Name.

In the second td, we will have the buttons. so as of now it is like:

            @foreach (var item in Model.Categories)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(m => item.Name)
                    </td>
                    <td>

                    </td>
                </tr>

            }

Now for the Buttons, in the second td, we can copy our JS codes from category.js

Copied the div codes(starting with a class text-center) from the render method for columns.

Pasted that replaced ${data} with @item.id here. Added a space(&nbsp) between the two anchor(<a>) tags here. 

Also maded the second anchor tag a button. So our table is done and the second td looks like:

                    <td>
                        <div class="text-center">
                            <a href="/Admin/Category/Upsert/@item.Id"
                               class="btn btn-success text-white" style="cursor:pointer">
                                <i class="fas fa-edit"></i>
                            </a>
                            &nbsp;
                            <button onClick=Delete('/Admin/Category/Delete/@item.Id')
                                    class="btn btn-danger text-white" style="cursor:pointer">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </div>
                    </td>

Now it's time to consume our tag helper. 

As we know the target element of our tag helper is a div. So after the table end, we will add a div. The div will have an attribute called page-model and we will pass @Model.PagingInfo to this. And we defined it in the class PageLinkTagHelper at the top of the class in the below line:
[HtmlTargetElement("div",Attributes = "page-model")]

Along with page-model attribute we need to pass the other attributes that we have declared as properties in that(PageLinkTagHelper) class with a hiphen in between the names(in smaller) of the properties like for PageClassesEnabled, we will use the attribute as page-classes-enabled. Set page-classes-enabled as true, page class as btn border. For page-class-normal its is btn btn-light. For page-class-selected it's btn btn-info active.

Alsong with all these added a class attribute with value btn-group float-right

THere is no div content inside. 

        <div page-model="@Model.PagingInfo" page-classes-enabled="true" 
             page-class="btn border" page-class-normal="btn btn-light" 
             page-class-selected="btn btn-info active"
             class="btn-group float-right">
        </div>

After the div ends, added a break.

Now run the solution login as admin and go to Category. Currently the pagination is not yet displayed.

We are only having two categories.

At the top if we change the url to  
https://localhost:44339/Admin/Category?productPage=2

We see two other categories(Make sure we have more than two categories in our table).

The reason we are seeing the tag helper is we are yet to configure our tag helper.

And we would configure it in _ViewImports.cshtml in Admin area

There added @addTagHelper, added the path of our TagHelpers with .* and passed BulkyBook after comma(May be it is the standard).

@addTagHelper BulkyBook.TagHelpers.*,BulkyBook


Now on running we see the Pagination buttons and this is working as expected.

Right now Delete Category will not work because we are not referencing the Javascipt now. We will fix that next.
---------------------------------------------------------------
--Index.cshtml for Category
@model BulkyBook.Models.ViewModels.CategoryVM
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<div class="row">
    <div class="col-6">
        <h2 class="text-primary">Category List </h2>
    </div>
    <div class="col-6 text-right">
        <a class="btn btn-primary" asp-action="Upsert"><i class="fas fa-plus"></i> &nbsp; Create New Category</a>
    </div>
</div>

<br />
<div class="p-4 border rounded">
    @if (Model.Categories.Count() > 0)
    {
        <table class="table table-striped border">
            <tr class="table-secondary">
                <th>
                    Category Name
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.Categories)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(m => item.Name)
                    </td>
                    <td>
                        <div class="text-center">
                            <a href="/Admin/Category/Upsert/@item.Id"
                               class="btn btn-success text-white" style="cursor:pointer">
                                <i class="fas fa-edit"></i>
                            </a>
                            &nbsp;
                            <button onClick=Delete('/Admin/Category/Delete/@item.Id')
                                    class="btn btn-danger text-white" style="cursor:pointer">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </div>
                    </td>
                </tr>

            }
        </table>
        <div page-model="@Model.PagingInfo" page-classes-enabled="true" 
             page-class="btn border" page-class-normal="btn btn-light" 
             page-class-selected="btn btn-info active"
             class="btn-group float-right">
        </div>
        <br/>
    }
    else
    {
        <p>No Categories Exists</p>
    }
</div>


@*<div class="p-4 border rounded">
        <table id="tblData" class="table table-striped table-bordered" style="width:100%">
            <thead class="thead-dark">
                <tr class="table-info">
                    <th>Name</th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>


    @section Scripts{
    <script src="~/js/category.js"></script>
    }*@

--ViewImports.cshtml for Admin
@using BulkyBook
@using BulkyBook.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper BulkyBook.TagHelpers.*,BulkyBook

---------------------------------------------------------------


---------------------------------------------------------------


---------------------------------------------------------------



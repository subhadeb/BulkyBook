As of now we fixed the handlers for Upsert.

Let's work in the Razor page(Upsert.cshtml).

Currently h2 displays Edit book, we can change it to dynamically show the text based on Id. If Id would be present it would be Edit Book else Create so modified it to.

<h2 class="text-info">@(Model.Book.Id != 0 ? "Edit": "Create") Book</h2>

We would do the same thing for setting hidden Book.Id like:

        @if(Model.Book.Id != 0)
        {
        <input type="hidden" asp-for="Book.Id">
        }

Now at the bottom we need to do the same for Update Button. We will convert input to button. and display the button text based on Id like:

<button type="submit" class="btn btn-primary form-control">@(Model.Book.Id > 0 ? "Update" : "Insert")</button>


Now if we go to Booklist.js
In return block for Edit Button, changed the Url to Upsert from Edit.

<a href="/BookList/Upsert?id=${data}"  class='btn btn-success text-wite' style='cursor:pointer;width:70px;'>


Now in Index.cshtml.

At the top for Create New Book changed asp-page to Upsert

Now in Index.cshtml again.
We can put an hyperlink for Create new Book and another for Add(Upsert) New Book also Reduced the Col size to col md 6 for the Book List like:

<div class="col-md-6">
        <h2 class="text-info">Book List</h2>
    </div>
    <div class="col-md-3">
        <a asp-page="Create" class="btn btn-info form-control text-white">Create New Book</a>
    </div>
    <div class="col-md-3">
        <a asp-page="Upsert" class="btn btn-info form-control text-white">Add(Upsert) New Book</a>
    </div>


Now on running.

If we click Create New Book we are on the Url with Upsert similary on Editing a Book also we are on the same url.

Also based on our wish we can create a new book or Upsert a new book.

This is the end of the Module

---------------------------------------------------------------
--Upsert.cshtml
@page
@model BookListRazor.Pages.BookList.UpsertModel
@{
}



<br />
<h2 class="text-info">@(Model.Book.Id != 0 ? "Edit": "Create") Book</h2>
<br />

<div class="border container" style="padding:30px">
    <form method="post">
        @if(Model.Book.Id != 0)
        {
        <input type="hidden" asp-for="Book.Id">
        }
        <div class="text-danger" asp-validation-summary="ModelOnly"></div>
        <div class="form-group row">
            <div class="col-3">
                <label asp-for="Book.Name"></label>
            </div>
            <div class="col-6">
                <input asp-for="Book.Name" class="form-control" />
            </div>
            <span asp-validation-for="Book.Name" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-3">
                <label asp-for="Book.Author"></label>
            </div>
            <div class="col-6">
                <input asp-for="Book.Author" class="form-control" />
            </div>
            <span asp-validation-for="Book.Author" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-3">
                <label asp-for="Book.ISBN"></label>
            </div>
            <div class="col-6">
                <input asp-for="Book.ISBN" class="form-control" />
            </div>
            <span asp-validation-for="Book.ISBN" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-3 offset-3">
                <button type="submit" class="btn btn-primary form-control">@(Model.Book.Id > 0 ? "Update" : "Insert")</button>
            </div>
            <div class="col-3">
                <a asp-page="Index" class="btn btn-success form-control">Back to List</a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial">
}



--BookList.js

var dataTable;

$(document).ready(function () {
    loadDataTable();
})

function loadDataTable() {
    dataTable = $('#DT_load').DataTable({
        "ajax": {
            'url': '/api/book',
            'type': 'GET',
            'datatype': 'json'
        },
        'columns': [
            { 'data': 'name', 'width': '20%' },
            { 'data': 'author', 'width': '20%' },
            { 'data': 'isbn', 'width': '20%' },
            {
                'data': 'id',
                'render': function (data) {
                    return `<div class = 'text-center'>
            <a href="/BookList/Upsert?id=${data}"  class='btn btn-success text-wite' style='cursor:pointer;width:70px;'>
                Edit
            </a>
            &nbsp;
            <a  class='btn btn-danger text-wite' style='cursor:pointer;width:70px;'
            onClick=Delete('/api/Book?id='+${data})>
                Delete
            </a>
                </div>
`
                }, 'width': '40%'
            }
        ],
        'language': {
            'emptyTable': 'no data found'
        },
        'width': '100%'
    });
}

function Delete(url) {
    swal({
        title: 'Are you Sure',
        text: 'Once Deleted you will not be able to recover',
        icon: 'warning',
        buttons:true,
        dangerMode: true
    }).then((willDelete) => {
        if (willDelete) {
            $.ajax({
                type: 'DELETE',
                url: url,
                success: function (data) {
                    if (data.success) {
                        toastr.success(data.message);
                        dataTable.ajax.reload();
                    }
                    else {
                        toastr.error(data.message);
                    }
                }
            })
        }
    })
}
--Index.cshtml
@page
@model BookListRazor.Pages.BookList.IndexModel
@{
}

<br />
<div class="container row p-0 m-0">
    <div class="col-md-6">
        <h2 class="text-info">Book List</h2>
    </div>
    <div class="col-md-3">
        <a asp-page="Create" class="btn btn-info form-control text-white">Create New Book</a>
    </div>
    <div class="col-md-3">
        <a asp-page="Upsert" class="btn btn-info form-control text-white">Add(Upsert) New Book</a>
    </div>

    <div class="col-12 border p-3 mt-3">
        <form method="post">
            @if (Model.Books.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            <label asp-for="Books.FirstOrDefault().Name"></label>
                        </th>
                        <th>
                            <label asp-for="Books.FirstOrDefault().Author"></label>
                        </th>
                        <th>
                            <label asp-for="Books.FirstOrDefault().ISBN"></label>
                        </th>
                        <th>
                        </th>
                    </tr>
                    @foreach (var item in Model.Books)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(x => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(x => item.Author)
                            </td>
                            <td>
                                @Html.DisplayFor(x => item.ISBN)
                            </td>
                            <td>
                                <button asp-page-handler="Delete" asp-route-id="@item.Id" onclick="return Confirm('Are You Sure you want to Delete')" class="btn btn-danger text-white btn-sm">Delete</button>
                                <a asp-page="Edit" asp-route-id="@item.Id" class="btn btn-success text-white btn-sm">Edit</a>
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <p>No Books Available</p>
            }
        </form>
    </div>

    <div class="col-12" style="text-align:center">
        <br />
        <span class="h3 text-info">OR</span>
        <br /><br />
    </div>
    <div class="col-12 border p-3">

        <table id="DT_load" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th> Author</th>
                    <th> ISBN</th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts{ 
<script src="~/js/bookList.js"></script>
}
---------------------------------------------------------------


---------------------------------------------------------------


---------------------------------------------------------------


